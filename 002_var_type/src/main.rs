fn main() {
    let var_i8: i8 = 0; // хранит целое число со знаком и занимает в памяти 8 бит (диапазон значений от -128 до 127)
    let var_u8: u8 = 0; //  хранит положительное целое число и занимает в памяти 8 бит (диапазон значений от 0 до 255)
    let var_i16: i16 = 0; // хранит целое число со знаком и занимает в памяти 16 бит (от -32 768 до 32 767)
    let var_u16: u16 = 0; // хранит положительное целое число и занимает в памяти 16 бит (от 0 до 65 535
    let var_i32: i32 = 0; // хранит целое число со знаком и занимает в памяти 32 бита (от -2 147 483 648 до 2 147 483 647)
    let var_u32: u32 = 0; // хранит положительное целое число и занимает в памяти 32 бита (от 0 до 4 294 967 295)
    let var_i64: i64 = 0; // целое число со знаком и занимает в памяти 64 бита (от -9,223,372,036,854,775,808 до 9,223,372,036,854,775,807)
    let var_u64: u64 = 0; // положительное целое число и занимает в памяти 64 бита (от 0 до 18 446 744 073 709 551 615)
    let var_i128: i128 = 0; // целое число со знаком и занимает в памяти 128 бит (примерно от -1.7 * 10^38 до +1.7 * 10^38)
    let var_u128: u128 = 0; // положительное целое число и занимает в памяти 128 бит (от 0 до где-то 3.4 * 10^38)
    let var_isize: isize = 0; // целое число со знаком, размерность которого зависит от архитектуры компьютера - 64 бита на 64-битной архитектуре (от -263 до 263 – 1), и 32 бита на 32-битной архитектуре (от -231 до 231 - 1)
    let var_usize: usize = 0; // положительное целое число, размерность которого зависит от архитектуры компьютера - 64 бита на 64-битной архитектуре (от 0 до 2^64-1), и 32 бита на 32-битной архитектуре (от 0 до 2^32-1)
}
